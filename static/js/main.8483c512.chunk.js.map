{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","undefined","number","setNumber","className","name","onFinish","values","console","log","sentences","data","length","Item","label","min","max","htmlType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuCeA,MAlCf,WACE,MAA4BC,wBAASC,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCH,wBAASC,GAAzC,mBASA,OATA,UAUE,sBAAKG,UAAU,MAAf,UACE,eAAC,IAAD,CAAMC,KAAK,SAASC,SAPH,SAACC,GACpBJ,EAAUI,EAAOL,QACjBM,QAAQC,IAAIC,EAAUC,KAAKC,SAKzB,UACE,cAAC,IAAKC,KAAN,CAAWC,MAAO,wCAAmCJ,EAAUC,KAAKC,OAAS,EAA3D,MAClBP,KAAK,SADL,SAGE,cAAC,IAAD,CAAaU,IAAK,EAAGC,IAAKN,EAAUC,KAAKC,OAAS,MAGpD,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CAAQI,SAAS,SAAjB,uCAMQ,OAAXf,OAAkBD,EAAY,qBAAKG,UAAU,WAAf,SAC7B,4BAAIM,EAAS,KAASR,OACf,SCtBAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8483c512.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\nimport { Form, Input, Button, InputNumber } from 'antd';\nimport sentences from './sentences.json'\n\nfunction App() {\n  const [number, setNumber] = useState(undefined)\n  const [sentence, setSentence] = useState(undefined)\n\n\n\n  const handleFinish = (values) => {\n    setNumber(values.number)\n    console.log(sentences.data.length)\n  }\n\n  return (\n    <div className=\"app\">\n      <Form name=\"number\" onFinish={handleFinish}>\n        <Form.Item label={\"Put in a number here\" + ` (max: ${sentences.data.length - 1}):`}\n        name=\"number\"\n        >\n          <InputNumber min={0} max={sentences.data.length - 1} />\n        </Form.Item>\n\n        <Form.Item>\n          <Button htmlType=\"submit\">\n            SHOW ME THE SENTENCE\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {number !== null | undefined ? <div className='sentence'>\n        <p>{sentences['data'][number]}</p>\n      </div> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}